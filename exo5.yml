openapi: 3.0.0
info:
  title: Product search
  version: 2.0.0
components:
  schemas:
    Product:
      type: object
      properties: 
        name:
          type: string
        expiration_datetime:
          type: string
          format: date-time
        price:
          type: integer
    Order:
      type: object
      properties:
        identifier:
          type: integer
        customer_name:
          type: string
        creation_datetime:
          type: string
          format: date-time
        total_amount:
          type: number
          format: double
  parameters:
    limit:
      name: limit
      in: query
      required: false
      schema:
        type: integer
        minimum: 1
      example: 10
      description: maximum number of the element
    q:
      name: query
      in: query
      required: false
      schema:
        type: string
      example: test
      description: term searched
    page:
      name: page
      in: query
      required: true
      schema:
        type: integer
        minimum: 1
      example: 14
      description: number of the page where the product is located
    size:
      name: size
      in: query
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 15
      example: 5
      description: number of items in each pages
  securitySchemes:
    Basic_Authentication:
      type: http
      scheme: basic
paths:
  /product:
    get:
      summary: return all products
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/q'
      responses:
        '200':
          description: return a list of product
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
              examples:
                case_1:
                  value:
                    - name: "test"
                      expiration_datetime: "2025-12-31T23:59:59Z"
                      price: 500
                    - name: "test test"
                      expiration_datetime: "2026-01-01T00:00:00Z"
                      price: 1000
                case_2:
                  value: []
  /orders:
    get:
      summary: return all commands
      tags:
        - Orders
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/size'
      responses:
        '200':
          description: return a list of commands
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
    post:
      summary: create a new command
      tags:
        - Orders
      security:
        - Basic_Authentication: []
      requestBody:
        required: true
        content: 
          application/json:
            schema:
              type: object
              items:
                $ref: '#/components/schemas/Order'
            example:
              identifier: 5
              customer_name: test
              creation_datetime: 2025-08-26T08:45:19.990Z
              total_amount: 1499.99
              
      responses:
        '201':
          description: command created
          content:
            text/plain:
              schema:
                type: string
                example: command created
        '401':
          description: must authenticate before creating commands
          content:
            text/plain:
              schema:
                type: string
                example: not authorized
